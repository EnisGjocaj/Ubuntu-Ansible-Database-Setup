---
# ------------------------------
# PostgreSQL Configuration Play
# ------------------------------

# Detect installed PostgreSQL version
- name: Get installed PostgreSQL major version
  shell: "psql -V | awk '{print $3}' | cut -d '.' -f1"
  register: postgres_version
  changed_when: false
  ignore_errors: yes  # prevent failure if psql not installed yet

- name: Set PostgreSQL major version (default 16)
  set_fact:
    postgres_version_major: "{{ postgres_version.stdout if postgres_version.stdout | length > 0 else '16' }}"

# Ensure PostgreSQL service is running
- name: Ensure PostgreSQL service is started and enabled
  service:
    name: postgresql
    state: started
    enabled: yes

# ------------------------------
# PostgreSQL Cluster Setup
# ------------------------------

- name: Check if PostgreSQL cluster already exists
  stat:
    path: "/var/lib/postgresql/{{ postgres_version_major }}/main"
  register: postgres_cluster_dir

- name: Initialize PostgreSQL cluster if not exists
  command: "pg_createcluster {{ postgres_version_major }} main --start"
  args:
    creates: "/var/lib/postgresql/{{ postgres_version_major }}/main"
  when: not postgres_cluster_dir.stat.exists
  become: true
  become_user: postgres

- name: Deploy custom PostgreSQL configuration
  template:
    src: postgresql.conf.j2
    dest: "/etc/postgresql/{{ postgres_version_major }}/main/postgresql.conf"
    owner: postgres
    group: postgres
    mode: '0644'
  notify: Restart PostgreSQL


- name: Ensure PostgreSQL cluster is running
  service:
    name: "postgresql@{{ postgres_version_major }}-main"
    state: started
    enabled: yes

- name: Debug PostgreSQL cluster directory
  debug:
    msg: "PostgreSQL cluster directory at /var/lib/postgresql/{{ postgres_version_major }}/main exists={{ postgres_cluster_dir.stat.exists }}"

# ------------------------------
# PostgreSQL Admin User & DB
# ------------------------------

- name: Create PostgreSQL admin user
  become: true
  become_user: postgres
  postgresql_user:
    name: "{{ postgres_admin_user }}"
    password: "{{ postgres_admin_password }}"
    role_attr_flags: "CREATEDB,CREATEROLE,SUPERUSER"
    state: present


