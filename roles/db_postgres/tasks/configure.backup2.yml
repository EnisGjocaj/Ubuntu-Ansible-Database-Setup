- name: Get installed PostgreSQL major version
  shell: "psql -V | awk '{print $3}' | cut -d '.' -f1"
  register: postgres_version
  changed_when: false
  ignore_errors: yes  # prevent failure if psql not installed yet

- name: Set PostgreSQL major version (default 16)
  set_fact:
    postgres_version_major: "{{ postgres_version.stdout if postgres_version.stdout | length > 0 else '16' }}"

- name: Ensure PostgreSQL is started and enabled
  service:
    name: postgresql
    state: started
    enabled: yes

# --- Check if cluster data exists ---
- name: Check if PostgreSQL cluster data exists
  stat:
    path: "/var/lib/postgresql/{{ postgres_version_major }}/main/PG_VERSION"
  register: pg_cluster_data

- name: Stop PostgreSQL before creating cluster
  service:
    name: postgresql
    state: stopped
  become: true

- name: Remove old cluster directories
  file:
    path: "/var/lib/postgresql/{{ postgres_version_major }}/main"
    state: absent
  become: true

- name: Remove old config directories
  file:
    path: "/etc/postgresql/{{ postgres_version_major }}/main"
    state: absent
  become: true

- name: Ensure PostgreSQL cluster parent directory exists
  file:
    path: "/var/lib/postgresql/{{ postgres_version_major }}"
    state: directory
    owner: postgres
    group: postgres
    mode: 0755
  become: true


- name: Drop cluster if exists (ignore errors)
  command: pg_dropcluster {{ postgres_version_major }} main --stop
  ignore_errors: yes
  become: true

- name: Debug PostgreSQL version variables
  debug:
    msg:
      - "postgres_version.stdout={{ postgres_version.stdout }}"
      - "postgres_version_major={{ postgres_version_major }}"

- name: Check if PostgreSQL main data directory exists
  stat:
    path: "/var/lib/postgresql/{{ postgres_version_major }}/main"
  register: pg_data_dir


- name: Remove existing broken cluster
  command: pg_dropcluster {{ postgres_version_major }} main --stop
  ignore_errors: yes
  become: true

- name: Initialize PostgreSQL cluster with correct owner
  command: pg_createcluster -u postgres {{ postgres_version_major }} main --start
  become: true

# --- Wait for PostgreSQL to be ready ---
- name: Wait until PostgreSQL cluster is ready
  command: pg_ctlcluster {{ postgres_version_major }} main status
  become: true
  become_user: postgres
  register: pg_status
  retries: 5
  delay: 2
  until: pg_status.rc == 0

- set_fact:
    postgres_version_major: "16"

# --- Set configuration directory dynamically ---
- name: Set PostgreSQL configuration directory dynamically
  set_fact:
    postgres_conf_dir: "/etc/postgresql/{{ postgres_version_major }}/main"

- name: Ensure PostgreSQL configuration directory exists
  file:
    path: "{{ postgres_conf_dir }}"
    state: directory
    owner: postgres
    group: postgres
    mode: 0755

- name: Template PostgreSQL configuration
  template:
    src: postgresql.conf.j2
    dest: "{{ postgres_conf_dir }}/postgresql.conf"
    owner: postgres
    group: postgres
    mode: 0644
  notify: Restart PostgreSQL

# --- Create admin user ---
- name: Create PostgreSQL admin user
  community.postgresql.postgresql_user:
    name: "{{ postgres_admin_user }}"
    password: "{{ postgres_admin_password }}"
    role_attr_flags: "SUPERUSER,CREATEDB,CREATEROLE"
    state: present
  become: true
  become_user: postgres
